
-----------以下只能在windows下进行----------------

1. 将uuEncryptEasy.h 添加到项目的包含目录中
2. 将下面代码段替换"\cocos2dx\platform\CCFileUtils.cpp"中的CCFileUtils::getFileData方法。
3. 使用uuEncryptEasy.exe对资源进行加密，直接运行该exe可查看说明，Encrypt.bat为示例
4. 编译运行项目

注：
	- 如果使用的是coco2dx的lib，以上2、3两步需要在该lib工程里进行并重新编译lib
	- 加密和解密使用的key必须一致。加密时设定命令行的参数，解密时见下面代码encryptEasy.SetKey("AONESOFT")
	- 代码同时支持资源加密与不加密
	- uuEncryptEasy.exe的目标是当前文件夹以及所有子文件夹（除了*.exe和*.bat），所以应把它放到资源目录的根目录来运行




#include "uuEncryptEasy.h"
unsigned char* CCFileUtils::getFileData(const char* pszFileName, const char* pszMode, unsigned long * pSize)
{
    unsigned char * pBuffer = NULL;
    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");
    *pSize = 0;
    do
    {
        // read the file from hardware
        std::string fullPath = fullPathForFilename(pszFileName);
        FILE *fp = fopen(fullPath.c_str(), pszMode);
        CC_BREAK_IF(!fp);
        
        fseek(fp,0,SEEK_END);
        *pSize = ftell(fp);
        fseek(fp,0,SEEK_SET);

#if 1 // EnableEncryptEasy
		char header[4] = {0};
		bool isEncrypted = false;
		fread(header,sizeof(unsigned char), 4,fp);
		if (header[0] == ('A'^'O') && header[1] == ('N'^'E') && header[2] == ('S'^'O') && header[3] == ('F'^'T'))
		{
			fseek(fp,4,SEEK_SET);
			isEncrypted = true;
		}else {
			fseek(fp,0,SEEK_SET);
		}
		pBuffer = new unsigned char[*pSize];
		*pSize = fread(pBuffer,sizeof(unsigned char), *pSize,fp);
		if (isEncrypted) {
			uuEncryptEasy encryptEasy;
			encryptEasy.SetKey("AONESOFT");
			pBuffer = encryptEasy.Decrypt(pBuffer,*pSize);
		}
		fclose(fp);
#else
		pBuffer = new unsigned char[*pSize];
		*pSize = fread(pBuffer,sizeof(unsigned char), *pSize,fp);
		fclose(fp);
#endif
        
    } while (0);
    
    if (! pBuffer)
    {
        std::string msg = "Get data from file(";
        msg.append(pszFileName).append(") failed!");
        
        CCLOG("%s", msg.c_str());
    }
    return pBuffer;
}